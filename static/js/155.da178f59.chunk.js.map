{"version":3,"sources":["ApiHelpers/Spotify.js","CustomComponents/Accordion.js","Classtime/classtime.js"],"names":["debounce","fn","wait","timeout","args","clearTimeout","Promise","resolve","setTimeout","Spotify","formData","FormData","append","fetch","method","headers","Authorization","client_creds","body","URLSearchParams","response","json","access_token","url","request","authenticate","baseURL","GET_Request","artistId","GET","tracks","props","type","placeholder","autoCorrect","maxLength","autoCapitalize","spellCheck","onChange","event","onFound","safe_results","albums","items","artists","currentTarget","value","length","search","then","results","Object","assign","style","color","padding","width","fontSize","border","margin","borderRadius","textOverflow","boxSizing","outline","display","btoa","Accept","string","encodeURIComponent","playlists","Accordion","state","shouldShowChildren","isHidden","toggleText","setState","render","collapsible","children","onClick","title","React","Component","PrismAsyncLight","registerLanguage","jsx","styles","sideBySide","justifyContent","vertical","flexDirection","alignItems","centered","height","app","show","Code","selectedLine","darcula","selectedLineStyle","cursor","background","unselectedLineStyle","customStyle","boxShadow","detectLineChange","Number","lineProps","number","onMouseEnter","e","onMouseLeave","this","language","wrapLines","Lesson","selectedIndex","keys","instructions","lines","selectLine","index","wrappedIndex","keyPressed","keyCode","window","addEventListener","removeEventListener","code","className","lesson1Instructions","1","2","3","4","5","lesson1","Colored","isRed","clicked","ActualHumanBeing","happy","name","text","sad","angry","ehhh","moods","changeMood","mood","map","CarList","list","make","model","intoCarDetailView","car","Example_Spotify_Data","preview_url","external_urls","spotify","album","images","total_tracks","followers","total","SpotifyArtist","artist","target","href","src","SpotifyTrack","track","controls","SpotifySearch","songList","artistList","intoTrackView","trackData","intoArtistView","artistData","resultsFound","SearchBar"],"mappings":"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","file":"static/js/155.da178f59.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction debounce(fn, wait = 400) {\n    let timeout = null;\n    return (...args) => {\n        clearTimeout(timeout);\n        return new Promise((resolve) => {\n            timeout = setTimeout(() => {\n                timeout = null;\n                resolve(fn(...args));\n            }, wait);\n        });\n    };\n}\n\nexport default class Spotify {\n    static baseURL = \"https://api.spotify.com/v1/\";\n    static client_creds = btoa(\n        \"2d38679d03b04cdfb39384814e2b8d0e:03013c1224e34de0ba46dd98e1f38739\"\n    );\n    static access_token;\n\n    static GET_Request = {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${Spotify.access_token}`,\n        },\n    };\n\n    static async authenticate() {\n        const formData = new FormData();\n        formData.append(\"grant_type\", \"client_credentials\");\n\n        const response = await fetch(\"https://accounts.spotify.com/api/token\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/x-www-form-urlencoded\",\n                Authorization: `Basic ${Spotify.client_creds}`,\n            },\n            body: new URLSearchParams(formData),\n        });\n        const json = await response.json();\n\n        Spotify.access_token = json.access_token;\n    }\n\n    static async fetch(url, request) {\n        if (!Spotify.access_token) await Spotify.authenticate();\n        request.headers.Authorization = `Bearer ${Spotify.access_token}`;\n        const response = await fetch(Spotify.baseURL + url, request);\n        return await response.json();\n    }\n\n    static GET(url) {\n        return Spotify.fetch(url, Spotify.GET_Request);\n    }\n\n    // mia's id: 5cbHD2ZEOKgTdLt9i8IOlE\n    static async getTopTracks(artistId) {\n        const json = await Spotify.GET(\n            `artists/${artistId}/top-tracks?country=US`\n        );\n        return json.tracks;\n    }\n\n    static search = debounce((string) =>\n        Spotify.GET(\n            `search?q=${encodeURIComponent(string)}&type=artist%2Ctrack%2Calbum`\n        )\n    );\n\n    static playlists = debounce((string) =>\n        Spotify.GET(`search?q=${encodeURIComponent(string)}&type=playlist`)\n    );\n\n    static SearchBar(props) {\n        return (\n            <>\n                <input\n                    type=\"text\"\n                    placeholder=\"Search for Artists, Songs, or Albums\"\n                    autoCorrect=\"off\"\n                    maxLength=\"80\"\n                    autoCapitalize=\"off\"\n                    spellCheck=\"false\"\n                    onChange={(event) => {\n                        if (!props.onFound) return;\n                        const safe_results = {\n                            albums: { items: [] },\n                            tracks: { items: [] },\n                            artists: { items: [] },\n                        };\n                        if (event.currentTarget.value.length < 3) {\n                            props.onFound(safe_results);\n                            return;\n                        }\n                        Spotify.search(event.currentTarget.value).then(\n                            (results) => {\n                                Object.assign(safe_results, results);\n                                props.onFound(safe_results);\n                            }\n                        );\n                    }}\n                    style={{\n                        color: \"rgb(0, 0, 0)\",\n                        padding: \"14px 48px\",\n                        width: \"550px\",\n                        fontSize: \"x-large\",\n                        border: \"0px\",\n                        margin: \"50px auto\",\n                        borderRadius: \"500px\",\n                        textOverflow: \"ellipsis\",\n                        boxSizing: \"border-box\",\n                        outline: \"none\",\n                        display: \"block\",\n                    }}\n                />\n            </>\n        );\n    }\n}\n","import React from \"react\";\n\nexport default class Accordion extends React.Component {\n    // props = { title: \"\", isHidden: true };\n    state = { shouldShowChildren: !this.props.isHidden };\n\n    toggleText = () => {\n        // ! will reverse a boolean (Ex: true becomes false)\n        this.setState({ shouldShowChildren: !this.state.shouldShowChildren });\n    };\n\n    render = () => {\n        const collapsible = this.state.shouldShowChildren ? (\n            this.props.children\n        ) : (\n            <></>\n        );\n        return (\n            <>\n                <h1 onClick={this.toggleText}>{this.props.title}</h1>\n                {collapsible}\n            </>\n        );\n    };\n}\n","/* eslint-disable */\nimport \"./classtime.css\";\nimport { PrismAsyncLight } from \"react-syntax-highlighter\";\nimport jsx from \"react-syntax-highlighter/dist/esm/languages/prism/jsx\";\nimport { darcula } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport React from \"react\";\nimport { app } from \"../index\";\nimport Spotify from \"../ApiHelpers/Spotify\";\nimport Accordion from \"../CustomComponents/Accordion\";\n\nPrismAsyncLight.registerLanguage(\"jsx\", jsx);\n\nconst styles = {\n    sideBySide: {\n        display: \"flex\",\n        justifyContent: \"stretch\",\n    },\n    vertical: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n    centered: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: \"100%\",\n    },\n};\n\napp.show(\n    <div>\n        <h1>\n            Create your own react component called <code>'Header'</code> that\n            does the following:\n        </h1>\n        <h2>\n            Has a property called <code>text</code>\n        </h2>\n        <h2>\n            Renders an h1 element with the text contained in the text property\n        </h2>\n        <h2>\n            Renders a p element with the text contained in the same text\n            property\n        </h2>\n        <h2>Also renders any children of the component</h2>\n    </div>\n);\n\napp.show(\n    <div>\n        <h1>\n            Using the <code>app.show</code> function\n        </h1>\n        <h2>\n            Display <strong>two</strong> of your components in your app\n        </h2>\n        <h2>They should each have different values for the text property</h2>\n        <h2>They should each have at least 1 child</h2>\n        <h2>\n            When you are done you can view your component by running{\" \"}\n            <code>npm start</code> in the terminal\n        </h2>\n    </div>\n);\n\n// Variables\n\n// Variable Definition\n// var myBoolean = false\n// alert(myBoolean)\n\n// Variable assignment\n// myBoolean = 5\n// alert(myBoolean)\n\nconst isFalse = false;\n\n// isFalse = true // wont work\n// alert(isFalse)\n// javascript will run all code up until the error occurs\n\n// If / Else Statements\n// IF what is in the parentheses is true,\n// run the code inside the brackets after the parentheses\n\n// Otherwise (ELSE), run the code inside the brackets after `else`\nconst isRed = false;\n\nif (isRed) {\n    // alert(\"I am red\")\n} else {\n    // alert(\"I am not red\")\n}\n\napp.show(\n    <div>\n        <h1>Create your own react component that does the following: </h1>\n        <h2>\n            Has a property called <code>isBold</code>\n        </h2>\n        <h2>\n            Renders its children in bold text if <code>isBold</code> is set to\n            true{\" \"}\n        </h2>\n        <h2>\n            Renders its children normally if <code>isBold</code> is set to false{\" \"}\n        </h2>\n        <h2>\n            {\" \"}\n            You can make text bold by using by putting it inside of a strong\n            element{\" \"}\n        </h2>\n        <h1>\n            Using the <code>app.show</code> function\n        </h1>\n        <h2>\n            Display <strong>two</strong> of your components in your app\n        </h2>\n        <h2>\n            They should each have different values for the <code>isBold</code>{\" \"}\n            property\n        </h2>\n        <h2>They should each have at least 1 child</h2>\n        <div>\n            this is <strong>bold text </strong>{\" \"}\n        </div>\n    </div>\n);\n\n// arrays / lists\nconst myList = [\n    \"First Item\",\n    \"Second Item\",\n    \"Third Item\",\n    \"Fourth Item\",\n    \"Fifth Item\",\n    \"Sixth Item\",\n];\n\nclass Code extends React.Component {\n    state = { selectedLine: this.props.selectedLine, style: darcula };\n\n    selectedLineStyle = {\n        cursor: \"crosshair\",\n        background: \"rgba(255, 255, 255, 0.1)\",\n        borderRadius: \"4px\",\n    };\n\n    unselectedLineStyle = {\n        display: \"block\",\n        cursor: \"crosshair\",\n    };\n\n    customStyle = {\n        border: \"none\",\n        boxShadow: \"none\",\n        background: \"rgb(46, 43, 43)\",\n    };\n\n    detectLineChange = () => {\n        const selectedLine = Number(this.props.selectedLine);\n        if (selectedLine === this.state.selectedLine) return;\n        // Just some garbage to force the syntax highlighter to update\n        const style =\n            this.state.style === this.customStyle ? {} : this.customStyle;\n        this.setState({ selectedLine: selectedLine, style: style });\n    };\n\n    lineProps = (number) => ({\n        style:\n            number === this.state.selectedLine\n                ? this.selectedLineStyle\n                : this.unselectedLineStyle,\n        onMouseEnter: (e) => {\n            if (number === this.state.selectedLine) return;\n            e.currentTarget.style.background = \"#0d164d7a\";\n        },\n        onMouseLeave: (e) => {\n            if (number === this.state.selectedLine) return;\n            e.currentTarget.style.background = \"\";\n        },\n    });\n\n    render() {\n        this.detectLineChange();\n        return (\n            <PrismAsyncLight\n                language=\"jsx\"\n                style={darcula}\n                customStyle={this.state.style}\n                wrapLines\n                lineProps={this.lineProps}\n            >\n                {this.props.children}\n            </PrismAsyncLight>\n        );\n    }\n}\n\nclass Lesson extends React.Component {\n    state = {\n        selectedIndex: 0,\n        selectedLine: Object.keys(this.props.instructions)[0],\n    };\n\n    componentDidMount() {\n        window.addEventListener(\"keyup\", this.keyPressed);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"keyup\", this.keyPressed);\n    }\n\n    lines = () => Object.keys(this.props.instructions);\n\n    selectLine = (index) => {\n        const lines = this.lines();\n        const wrappedIndex =\n            index < 0 ? index + lines.length : index % lines.length;\n        this.setState({\n            selectedIndex: wrappedIndex,\n            selectedLine: lines[wrappedIndex],\n        });\n    };\n\n    keyPressed = (e) => {\n        const keyCode = e.keyCode;\n        switch (keyCode) {\n            case 32:\n            case 39:\n            case 40:\n            case 13:\n                this.selectLine(this.state.selectedIndex + 1);\n                break;\n            case 37:\n            case 38:\n                this.selectLine(this.state.selectedIndex - 1);\n                break;\n            default:\n                break;\n        }\n    };\n\n    render() {\n        return (\n            <div style={styles.sideBySide}>\n                <Code selectedLine={this.state.selectedLine}>\n                    {this.props.code}\n                </Code>\n                <div className=\"instructions\">\n                    {\" \"}\n                    {this.props.instructions[this.state.selectedLine]}{\" \"}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst lesson1Instructions = {\n    1: <>Class Definition</>,\n    2: (\n        <>\n            Render function definition:\n            <br />\n            <br />\n            Determines what is displayed on the page.\n        </>\n    ),\n    3: (\n        <>\n            Return statement:\n            <br />\n            <br />\n            This is where you put your html\n        </>\n    ),\n    4: (\n        <>\n            this.props.children:\n            <br />\n            <br />\n            represents what is placed in between the opening and closing tags\n            for your component.\n        </>\n    ),\n    5: (\n        <>\n            this.props.children is put inside curly braces because it is\n            javascript inside the rendered html\n        </>\n    ),\n};\n\nconst lesson1Code = `class MyComponent extends React.Component {\n  render() {\n    return <>\n      {this.props.children}\n      <p>{this.props.myProperty}</p>\n    </>\n  }\n  app.show(<>\n    <MyComponent myProperty=\"I am a property value\">\n      <h1>I am a children of MyComponent</h1>\n      <p>So am I</p>\n      Regular text is children too\n    </MyComponent>\n    <MyComponent myProperty=\"I am property value of another component\">\n      <h1>I am a children of MyComponent</h1>\n      <p>So am I</p>\n      Regular text is children too\n    </MyComponent>\n  </>)\n}`;\n\nconst lesson2Code = `app.show(<>\n  <MyComponent myProperty=\"I am a property value\">\n    <h1>I am a children of MyComponent</h1>\n    <p>So am I</p>\n    Regular text is children too\n  </MyComponent>\n  <MyComponent myProperty=\"I am property value of another component\">\n    <h1>I am a children of MyComponent</h1>\n    <p>So am I</p>\n    Regular text is children too\n  </MyComponent>\n</>)`;\n\nconst lesson1 = (\n    <div style={styles.sideBySide}>\n        <Lesson instructions={lesson1Instructions} code={lesson1Code} />\n    </div>\n);\n\napp.show(lesson1);\n\n// make new class time folder and files\n// new if statement exercise for classtime\n// go over previous lessons with properties\n\napp.show(\n    <div style={styles.vertical}>\n        <h1>Create your own react component that does the following: </h1>\n        <h2>Renders its children</h2>\n        <h1>\n            Using the <code>app.show</code> function\n        </h1>\n        <h2>\n            Display <strong>two</strong> of your components in your app\n        </h2>\n        <h2>Give one of them a property </h2>\n        <h2>They both should each have at least 1 child</h2>\n    </div>\n);\n\n// explain what a function is inside a component\n\napp.show(\n    <div>\n        <h1>\n            In the component you just made, write a function that does the\n            following:\n        </h1>\n        <h2>- Takes in a parameter</h2>\n        <h2>- If the value of the parameter is true: show an alert. </h2>\n        <h2>\n            {\" \"}\n            &nbsp;&nbsp;&nbsp;&nbsp; - <code>ex: alert(\"text\")</code>{\" \"}\n        </h2>\n        <h2>- otherwise it does nothing</h2>\n        <h2>\n            - call the function in the component's render function right above\n            the return statement\n        </h2>\n    </div>\n);\n\n// explain events\n// remove function call from render and instead pass to event\n\nclass ClickMe extends React.Component {\n    clicked = () => {\n        alert(\"I was clicked\");\n    };\n\n    render() {\n        return <h1 onClick={this.clicked}>{this.props.children}</h1>;\n    }\n}\n\n// app.show(\n//   <div style={styles.centered}>\n//     <ClickMe>Click Me</ClickMe>\n//   </div>\n// )\n\n// explain ternary statements\n// explain ! operator\n// explain state\n\nclass Colored extends React.Component {\n    state = { isRed: false };\n\n    clicked = () => {\n        this.setState({ isRed: !this.state.isRed });\n    };\n\n    render() {\n        const style = this.state.isRed ? { color: \"red\" } : {};\n        return (\n            <h1 style={style} onClick={this.clicked}>\n                {this.props.children}\n            </h1>\n        );\n    }\n}\n\napp.show(\n    <div style={styles.centered}>\n        <Colored>I change colors</Colored>\n    </div>\n);\n\n// Classtime 8/12\nclass ActualHumanBeing extends React.Component {\n    happy = {\n        name: \"happy\",\n        text: \": )\",\n    };\n    sad = {\n        name: \"sad\",\n        text: \": (\",\n    };\n    angry = {\n        name: \"angry\",\n        text: \">: (\",\n    };\n    ehhh = {\n        name: \"ehhh\",\n        text: \": /\",\n    };\n\n    moods = [this.happy, this.sad, this.angry, this.ehhh];\n\n    state = this.happy;\n\n    changeMood = (mood) => {\n        this.setState(mood);\n    };\n\n    render() {\n        return (\n            <>\n                {this.moods.map((mood) => (\n                    <div\n                        className={`human ${mood.name}`}\n                        onClick={() => this.changeMood(mood)}\n                    >\n                        {mood.text}\n                    </div>\n                ))}\n                <h1> My mood is: {this.state.name}</h1>\n            </>\n        );\n    }\n}\n\napp.show(\n    <>\n        <ActualHumanBeing></ActualHumanBeing>\n    </>\n);\n\n// This is a definition\nclass CarList extends React.Component {\n    list = [\n        {\n            make: \"Volvo\",\n            model: \"740\",\n            color: \"Yellow\",\n        },\n        {\n            make: \"Airplane\",\n            model: \"909\",\n            color: \"Blue\",\n        },\n        {\n            make: \"Mustang\",\n            model: \"GT\",\n            color: \"White\",\n        },\n    ];\n\n    intoCarDetailView = (car) => {\n        return (\n            <h1>\n                {car.make} {car.model} {car.color}\n            </h1>\n        );\n    };\n\n    // After the return is what shows when this component is rendered\n    render = () => {\n        return <>{this.list.map(this.intoCarDetailView)}</>;\n    };\n}\n\napp.show(\n    <>\n        <CarList></CarList>\n    </>\n);\n\n// Example Spotify Data\nconst Example_Spotify_Data = {\n    tracks: {\n        items: [\n            {\n                name: \"Song 1\",\n                preview_url: \"Link to preview mp3 file\",\n                external_urls: {\n                    spotify: \"Link to spotify\",\n                },\n                album: {\n                    images: [{ url: \"Link to image\" }],\n                },\n            },\n            {\n                name: \"Song 2\",\n                preview_url: \"Link to preview mp3 file\",\n                external_urls: {\n                    spotify: \"Link to spotify\",\n                },\n                album: {\n                    images: [{ url: \"Link to image\" }],\n                },\n            },\n        ],\n    },\n    albums: {\n        items: [\n            {\n                name: \"Imminent Euphoria\",\n                total_tracks: 5,\n                images: [{ url: \"Link to image\" }],\n                external_urls: {\n                    spotify: \"Link to spotify\",\n                },\n            },\n            {\n                name: \"99.9%\",\n                total_tracks: 16,\n                images: [{ url: \"Link to image\" }],\n                external_urls: {\n                    spotify: \"Link to spotify\",\n                },\n            },\n        ],\n    },\n    artists: {\n        items: [\n            {\n                name: \"Mia\",\n                followers: {\n                    total: 30,\n                },\n                external_urls: {\n                    spotify: \"Link to Spotify\",\n                },\n                images: [{ url: \"Link to image\" }],\n            },\n            {\n                name: \"Blue October\",\n                followers: {\n                    total: 30,\n                },\n                external_urls: {\n                    spotify: \"Link to Spotify\",\n                },\n                images: [{ url: \"Link to image\" }, { url: \"Link to image\" }],\n            },\n        ],\n    },\n};\n\nclass SpotifyArtist extends React.Component {\n    artist = this.props.artist;\n\n    render() {\n        if (!this.artist.images[0]) {\n            this.artist.images[0] = {};\n        }\n        return (\n            <a\n                className=\"artist\"\n                target=\"_blank\"\n                href={this.artist.external_urls.spotify}\n            >\n                <h2>{this.artist.name}</h2>\n                <img\n                    width=\"150px\"\n                    height=\"150px\"\n                    src={this.artist.images[0].url}\n                ></img>\n                <p>Followers: {this.artist.followers.total}</p>\n            </a>\n        );\n    }\n}\n\nclass SpotifyTrack extends React.Component {\n    render() {\n        return (\n            <div className=\"track\">\n                <img\n                    width=\"100px\"\n                    height=\"100px\"\n                    src={this.props.track.album.images[0].url}\n                ></img>\n                <div className=\"track-player\">\n                    <h2>{this.props.track.name}</h2>\n                    <audio controls src={this.props.track.preview_url}></audio>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass SpotifySearch extends React.Component {\n    state = {\n        songList: Example_Spotify_Data.tracks.items,\n        artistList: Example_Spotify_Data.artists.items,\n    };\n\n    intoTrackView = (trackData) => {\n        return <SpotifyTrack track={trackData}></SpotifyTrack>;\n    };\n\n    intoArtistView = (artistData) => {\n        return <SpotifyArtist artist={artistData}></SpotifyArtist>;\n    };\n\n    resultsFound = (results) => {\n        this.setState({\n            songList: results.tracks.items,\n            artistList: results.artists.items,\n        });\n    };\n\n    render = () => {\n        return (\n            <>\n                <Spotify.SearchBar onFound={this.resultsFound} />\n\n                <Accordion title=\"Songs\">\n                    {this.state.songList.map(this.intoTrackView)}\n                </Accordion>\n                <Accordion title=\"Artists\">\n                    <div className=\"artist-grid\">\n                        {this.state.artistList.map(this.intoArtistView)}\n                    </div>\n                </Accordion>\n            </>\n        );\n    };\n}\n\napp.show(\n    <>\n        <SpotifySearch></SpotifySearch>\n    </>\n);\n"],"sourceRoot":""}